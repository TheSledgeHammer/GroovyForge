buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
		classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
	}
}

plugins {
	id 'groovy'
	id 'maven'
	id 'idea'
	id "com.matthewprenger.cursegradle" version "1.4.0"
}
apply plugin: 'net.minecraftforge.gradle'
apply from: project.file('maven.gradle')

version = "${version_major}.${version_minor}.${version_patch}"
group = "ooo.thesledgehammer"
archivesBaseName = "groovyforge"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
repositories {
	maven {
		name = "Apache Groovy"
		url = "https://mvnrepository.com/artifact/org.codehaus.groovy/groovy"
	}
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
	mappings channel: 'snapshot', version:"${mcp_mappings}-${mc_version_mappings}"
	runs {
		client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                groovyforge {
                    source sourceSets.main
								}
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                groovyforge {
                    source sourceSets.main
                }
            }
        }

		data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'


						// Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'groovyforge', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                groovyforge {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
	minecraft "net.minecraftforge:forge:${mcversion}-${forgeversion}"
	compile "org.codehaus.groovy:groovy:${groovy_version}"
}

jar {
	manifest {
		attributes([
				'FMLModType': 'LANGPROVIDER'
		])
		attributes(['Specification-Title': 'Mod Language Provider',
					'Specification-Vendor': 'TheSledgeHammer',
					'Specification-Version': "4",
					'Implementation-Title': "GroovyForge",
					'Implementation-Version': "${version}",
					'Implementation-Vendor' :'GroovyForge',
					'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

//tasks.curseforge.enabled = project.hasProperty('curseforge_key')

curseforge {
	if (project.hasProperty('curseforge_key')) {
		apiKey = project.curseforge_key
	}
	project {
		id = project.projectId
		changelog = "A changelog can be found at https://github.com/TheSledgeHammer/GroovyForge"
		changelogType = 'markdown'
		releaseType = project.curse_type
		addGameVersion project.mcversion
		mainArtifact(jar) {
			displayName = "GroovyForge"
		}
	}
}
